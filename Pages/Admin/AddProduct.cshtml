@page

@model SkateShop.Pages.AddProductModel
@{
    
}
<script>
    window.onload =() => {
        changeCurrentCategory(document.getElementById("selectedCategory"));
    }
    const changeCurrentCategory = function (select) {
        var currentCategory = select.options[select.selectedIndex].text
        var categories = document.getElementById("custom_container").children
        console.log(categories)
        Array.from(categories).forEach(category => {
            category.style = "display:none"

            if (category.className.includes("Clothing") && (currentCategory == "Cap" || currentCategory == "Hoodie" || currentCategory == "Tshirt"))
                category.style = "display:flex";
            else if (category.className.includes("Boards") && currentCategory == "Skateboard")
                category.style = "display:flex";
            else if (category.className.includes("Wheels") && currentCategory == "Wheel")
                category.style = "display:flex";
            else if (category.className.includes("Shoes") && currentCategory == "Shoes")
                category.style = "display:flex"

        })
   }
</script>
<form method="post">
    <div class="input-group w-75 mb-2">
        @Html.LabelFor(model => Model.Image, new { @class = "col-2" })
        @Html.EditorFor(model => Model.Image, new { htmlAttributes = new { @class = "form-control", @placeholder = "Image path url" } })
    </div>

    <div class="input-group w-75 mb-2 ">
        @Html.LabelFor(model => Model.Name, new { @class = "col-2" })
        @Html.EditorFor(model => Model.Name, new { htmlAttributes = new { @class = "form-control" } })
    </div>

    <div class="input-group w-75 mb-2 ">
        @Html.LabelFor(model => Model.Price, new { @class = "col-2" })
        @Html.EditorFor(model => Model.Price, new { htmlAttributes = new { @class = "form-control col-3" } })
    </div>

    <div class="input-group w-75 mb-2 ">
        @Html.LabelFor(model => Model.Description, new { @class = "col-2" })
        @Html.TextAreaFor(model => Model.Description, 5, 50, new { @class = "form-control" })
    </div>

    <div class="input-group w-75 mb-2 ">
        @Html.LabelFor(model => Model.Color, new { @class = "col-2" })
        <select asp-for="@Model.Color" asp-items="Html.GetEnumSelectList<Models.Enum.Color>()" class="form-control col-3">
        </select>
    </div>

    <div class="input-group w-75 mb-2">
        @Html.LabelFor(model => Model.UnitsInStock, new { @class = "col-2" })
        @Html.EditorFor(model => Model.UnitsInStock, new { htmlAttributes = new { @class = "form-control col-3" } })

        @Html.LabelFor(model => Model.Category, new { @class = "col-2" })
        <select id="selectedCategory" onchange="changeCurrentCategory(this)" class="form-control col-3"
                asp-for="@Model.Category" asp-items="Html.GetEnumSelectList<Models.Enum.Category>()">
        </select>

    </div>
    <div class="input-group w-75 mb-2">
        @Html.LabelFor(model => Model.Chosen, new { @class = "col-2" })
        @Html.EditorFor(model => Model.Chosen, new { htmlAttributes = new { @class = "form-control col-1" } })
    </div>

    <div id="custom_container" class="">
        <div style="display:none" class="Clothing input-group w-75 mb-2">
            @Html.LabelFor(model => Model.Size, "Clothing size", new { @class = "col-3" })
            <select asp-for="@Model.Size" asp-items="Html.GetEnumSelectList<Models.Enum.Size>()" class="form-control col-3"></select>
        </div>
        <div style="display:none" class="Boards input-group w-75 mb-2">
            @Html.LabelFor(model => Model.BoardSize, new { @class = "col-2" })
            @Html.EditorFor(model => Model.BoardSize, new { htmlAttributes = new { @class = "form-control col-3" } })

            @Html.LabelFor(model => Model.Material, new { @class = "col-2" })
            <select asp-for="@Model.Material" asp-items="Html.GetEnumSelectList<Models.Enum.Material>()" class="form-control col-3"></select>
        </div>
        <div style="display:none" class="Wheels input-group w-75 mb-2">
            @Html.LabelFor(model => Model.WheelSize, new { @class = "col-2" })
            @Html.EditorFor(model => Model.WheelSize, new { htmlAttributes = new { @class = "form-control" } })

            @Html.LabelFor(model => Model.Durometer, new { @class = "col-2" })
            @Html.EditorFor(model => Model.Durometer, new { htmlAttributes = new { @class = "form-control" } })
        </div>
        <div style="display:none" class="Shoes input-group w-75 mb-2">
            @Html.LabelFor(model => Model.ShoeSizeEu, "Shoe-Size EU", new { @class = "col-3" })
            @Html.EditorFor(model => Model.ShoeSizeEu, new { htmlAttributes = new { @class = "form-control col-3" } })
        </div>
    </div>
    <input type="submit" value="Add" />

</form>


